/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2023-09-09 13:40:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sunilos.p4.ctl.UserRegistrationCtl;
import com.sunilos.p4.ctl.ORSView;
import java.util.HashMap;
import com.sunilos.p4.util.HTMLUtility;
import com.sunilos.p4.util.DataUtility;
import com.sunilos.p4.util.ServletUtility;

public final class UserRegistrationView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sunilos.p4.ctl.ORSView");
    _jspx_imports_classes.add("com.sunilos.p4.ctl.UserRegistrationCtl");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("com.sunilos.p4.util.ServletUtility");
    _jspx_imports_classes.add("com.sunilos.p4.util.DataUtility");
    _jspx_imports_classes.add("com.sunilos.p4.util.HTMLUtility");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      com.sunilos.p4.bean.UserBean bean = null;
      bean = (com.sunilos.p4.bean.UserBean) _jspx_page_context.getAttribute("bean", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (bean == null){
        bean = new com.sunilos.p4.bean.UserBean();
        _jspx_page_context.setAttribute("bean", bean, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h1>User Registration</h1>\r\n");
      out.write("\r\n");
      out.write("<form method=\"POST\">\r\n");
      out.write("   <input type=\"hidden\" name=\"id\" value=\"");
      out.print(bean.getId());
      out.write("\">\r\n");
      out.write("   <input type=\"hidden\" name=\"createdBy\" value=\"");
      out.print(bean.getCreatedBy());
      out.write("\">\r\n");
      out.write("   <input type=\"hidden\" name=\"modifiedBy\" value=\"");
      out.print(bean.getModifiedBy());
      out.write("\"> \r\n");
      out.write("   <input type=\"hidden\" name=\"createdDatetime\" value=\"");
      out.print(DataUtility.getTimestamp(bean.getCreatedDatetime()));
      out.write("\">\r\n");
      out.write("   <input type=\"hidden\" name=\"modifiedDatetime\" value=\"");
      out.print(DataUtility.getTimestamp(bean.getModifiedDatetime()));
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("   <p class=\"success-message\">\r\n");
      out.write("      ");
      out.print(ServletUtility.getSuccessMessage(request));
      out.write("\r\n");
      out.write("   </p>\r\n");
      out.write("   <p class=\"error-message\">\r\n");
      out.write("      ");
      out.print(ServletUtility.getErrorMessage(request));
      out.write("\r\n");
      out.write("   </p>\r\n");
      out.write("\r\n");
      out.write("   <table>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <th>First Name*</th>\r\n");
      out.write("         <td><input type=\"text\" name=\"firstName\"\r\n");
      out.write("            value=\"");
      out.print(DataUtility.getStringData(bean.getFirstName()));
      out.write("\"><font\r\n");
      out.write("            color=\"red\"> ");
      out.print(ServletUtility.getErrorMessage("firstName", request));
      out.write("</font></td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <th>Last Name*</th>\r\n");
      out.write("         <td><input type=\"text\" name=\"lastName\"\r\n");
      out.write("            value=\"");
      out.print(DataUtility.getStringData(bean.getLastName()));
      out.write("\"><font\r\n");
      out.write("            color=\"red\"> ");
      out.print(ServletUtility.getErrorMessage("lastName", request));
      out.write("</font></td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <th>LoginId*</th>\r\n");
      out.write("         <td><input type=\"text\" name=\"login\"\r\n");
      out.write("            placeholder=\"Must be Email ID\"\r\n");
      out.write("            value=\"");
      out.print(DataUtility.getStringData(bean.getLogin()));
      out.write("\"><font\r\n");
      out.write("            color=\"red\"> ");
      out.print(ServletUtility.getErrorMessage("login", request));
      out.write("</font></td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <th>Password*</th>\r\n");
      out.write("         <td><input type=\"password\" name=\"password\"\r\n");
      out.write("            value=\"");
      out.print(DataUtility.getStringData(bean.getPassword()));
      out.write("\"><font\r\n");
      out.write("            color=\"red\"> ");
      out.print(ServletUtility.getErrorMessage("password", request));
      out.write("</font></td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <th>Confirm Password*</th>\r\n");
      out.write("         <td><input type=\"password\" name=\"confirmPassword\"\r\n");
      out.write("            value=\"");
      out.print(DataUtility.getStringData(bean.getConfirmPassword()));
      out.write("\"><font\r\n");
      out.write("            color=\"red\"> ");
      out.print(ServletUtility
            .getErrorMessage("confirmPassword", request));
      out.write("</font></td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <th>Gender</th>\r\n");
      out.write("         <td>\r\n");
      out.write("            ");

               HashMap map = new HashMap();
               map.put("M", "Male");
               map.put("F", "Female");
               
               String htmlList = HTMLUtility.getList("gender", bean.getGender(),
               		map);
               
      out.write(' ');
      out.print(htmlList);
      out.write("\r\n");
      out.write("         </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <th>Date Of Birth (mm/dd/yyyy)</th>\r\n");
      out.write("         <td><input type=\"text\" name=\"dob\" readonly=\"readonly\"\r\n");
      out.write("            value=\"");
      out.print(DataUtility.getDateString(bean.getDob()));
      out.write("\"> <a\r\n");
      out.write("            href=\"javascript:getCalendar(document.forms[0].dob);\"> <img\r\n");
      out.write("            src=\"./img/cal.jpg\" width=\"16\" height=\"15\" border=\"0\"\r\n");
      out.write("            alt=\"Calender\">\r\n");
      out.write("            </a><font color=\"red\"> ");
      out.print(ServletUtility.getErrorMessage("dob", request));
      out.write("</font>\r\n");
      out.write("         </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("         <th></th>\r\n");
      out.write("         <td colspan=\"2\" align=\"center\">\r\n");
      out.write("         	");

         	long id = bean.getId();
         	if (id <= 0){
         	
      out.write("\r\n");
      out.write("         		<input  class=\"primary-btn\" type=\"submit\" name=\"operation\" value=\"");
      out.print(UserRegistrationCtl.OP_SIGN_UP );
      out.write("\">\r\n");
      out.write("         	");

         	}else{
         	
      out.write("\r\n");
      out.write(" 				<a class=\"secondary-btn\" href=\"");
      out.print(ORSView.LOGIN_CTL);
      out.write("\" >Login</a>\r\n");
      out.write(" 			");

 			}
 			
      out.write("\r\n");
      out.write("         </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("   </table>\r\n");
      out.write("\r\n");
      out.write("</form>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
